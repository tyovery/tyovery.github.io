<html lang="zh-Hant-HK">
<head>
<style>
div.pop{line-height: 100%;}
div.info{line-height: 150%;}
</style>
</head>
<body>

<script>

var pop = [] ; // 母體
var size , sum , mean , sd , md , mode , range , range_c , range_b , cv , se ;
// 樣本數,加總,期望值,標準差,平均差,眾數,全距,全距係數,平均間距,變異係數,標準誤

function inputClear()
{
	pop = [] ;
	// inputValue.value = "" ;
	inputSub() ;
}

function popAdd() // 手動加入樣本到母體
{
	if(inputValue.value.length>0)
	{
		var txt = inputValue.value + "" ;

		// 清理
		/*
		txt = txt.replace(/epi|pie/ig,""); // e , pi
		txt = txt.replace(/e/ig,","+Math.E+","); // e
		txt = txt.replace(/pi/ig,","+Math.PI+","); // pi
		*/
		txt = txt.replace(/\ |[a-z]/ig,""); // 清除(空格,拉丁字母)
		
		// 加到母體
		pop.push(...txt.split(","));
	}
}

function popMinus()
{
	pop.shift();
	pop.pop();
	inputSub();
}

function inputSub()
{
	// 清理非數字元素
	// alert(pop.join("\n"));
	for(var n = 0 ; n < pop.length ; n++)
	{
		pop[n] += "";

		// 處理 多於一個小數點 的狀況
		var array = pop[n].split(".") ;
		if(array.length>2) pop[n] = array.shift()+"."+array.join("");
		/*
		pop[n] = pop[n].replace(/e/ig,","+Math.E+","); // e
		pop[n] = pop[n].replace(/pi/ig,","+Math.PI+","); // pi
		pop[n] = pop[n].replace(/\ |[a-z]/ig,""); // 清除
		*/
		pop[n] = eval(pop[n]) ; // 運算
		pop[n] *= 1 ; // 化為數字
		if( pop[n].length < 1 || !(pop[n]>=0 || pop[n]<0) )
		{
			pop.splice(n,1) ;
			n-- ;
		}
	}
	
	pop.sort((a,b)=>a-b); // 排序

	size = pop.length ; // 樣本數
	
	sum = 0 ; // 加總
	for(var n=0 ; n<pop.length ; n++)
	{
		sum += pop[n]*1 ;
	}
	
	// 期望值
	if(size>0) mean = sum / size ;
	else mean = "-" ;
	
	// 平均差
	if(size>0)
	{	
		var mdSum = 0 ;
		for(var n=0; n<pop.length ; n++)
		{
			mdSum += Math.abs(pop[n]-mean) ;
		}
		md = mdSum/size ; // population or sample
	}
	else md = "-" ;

	// 變異數
	if(size>0)
	{	
		var vari = 0 ;
		for(var n=0; n<pop.length ; n++)
		{
			if(dataSet_sample.checked) vari += (pop[n]-mean)**2 / (size-1) ; // sample
			else vari += (pop[n]-mean)**2 / size ; // population
		}
	}
	else var vari = "-" ;
	
	// 標準差
	if(size>0) sd = Math.sqrt(vari) ;
	else sd = "-" ;

	// 變異係數
	if(size>0)
	{
		cv = sd/mean ;
	}
	else cv = "-" ;
	
	// 標準誤
	if(size>0)
	{
		se = sd/Math.sqrt(size) ;
	}
	else se = "-" ;
	
	// 四分位數
	var median , q1 , q3 , L , R , pos ; // 四分位數 , 左數列 , 右數列 , 位置
	if(size>0)
	{
		// 中位數
		if(pop.length%2==1)
		{
			pos = (pop.length-1)/2 ;
			median = pop[pos] ;
			L = [...pop.slice(0,pos)] ;
			R = [...pop.slice(pos+1)] ;
		}
		else
		{
			pos = pop.length/2 ;
			median = ( pop[pos-1]*1 + pop[pos]*1 ) / 2 ;
			L = [...pop.slice(0,pos)] ;
			R = [...pop.slice(pos)] ;
		}
		
		// Q1 , Q3
		if(L.length>0)
		{
			if(L.length%2==1)
			{
				pos = (L.length-1)/2 ;
				q1 = L[pos] ;
				q3 = R[pos] ;
			}
			else
			{
				pos = L.length/2 ;
				q1 = ( L[pos-1]*1 + L[pos]*1 ) / 2 ;
				q3 = ( R[pos-1]*1 + R[pos]*1 ) / 2 ;
			}
		}
		else
		{
			q1 = "-" ;
			q3 = "-" ;
		}
	}
	else
	{
		median = "-" ;
		q1 = "-" ;
		q3 = "-" ;
	}

	// 眾數
	if(size>0)
	{
		mode = [] ; // 眾數[元素,數量]
		var check = [...new Set(pop)] ; // 樣本(不重複)
		var count = [] ; // 記錄樣本出現次數
		for(var n=0 ; n<check.length ; n++)
		{
			count[n] = 0 ;
			for(var m=0 ; m<pop.length ; m++)
			{
				if(pop[m] == check[n]) count[n] ++ ;
			}
			if(n>0)
			{
				if(count[n] > mode[1])
				{
					mode[0] = [check[n]] ; // 元素
					mode[1] = count[n] ; // 數量
				}
				else if(count[n] == mode[1])
				{
					mode[0].push(check[n]) ; // 元素
				}
			}
			else
			{
				mode[0] = [check[0]] ; // 元素
				mode[1] = count[0] ; // 數量
			}
		}
	}
	else mode = [["-"],0] ;
	
	// 全距
	if(pop.length>0) range = pop[pop.length-1] - pop[0] ;
	else range = " - " ;
	
	// 全距係數
	if(pop.length>0) range_c = range / ( pop[pop.length-1] + pop[0] ) ;
	else range_c = " - " ;

	// 平均間距
	if(pop.length>1) range_b = range / ( pop.length - 1 ) ;
	else range_b = " - " ;
	
	// 輸出
	DisplayAreaPop.innerHTML = (dataSet_sample.checked ? "樣本數據 ( Sample" : "母體數據 ( Population") + " Data Set )：" + pop.join(" , ") + "<br />" ;

	DisplayArea.innerHTML = "數據量 ( N / n / Total Frequency / Data Size )：" + size + "<br />" ;
	DisplayArea.innerHTML += "加總 ( Sum )：" + sum + "<br />" ;
	
	DisplayArea.innerHTML += "<br />< 集中趨勢 ><br />" ;
	DisplayArea.innerHTML += "期望值 / 平均值 ( μ / x&#772; / EV / Mean )：" + mean + "<br />" ;
	DisplayArea.innerHTML += "中位數 ( Median )："+median+"<br />" ;
	DisplayArea.innerHTML += "眾數 ( Mode )：" ;
	if((mode[1]==1 && mode[0].length>10)) // 太多時不顯示眾數
	{
		DisplayArea.innerHTML += "..." ;
	}
	else
	{
		DisplayArea.innerHTML += mode[0].join(" , ") ;
	}
	DisplayArea.innerHTML += " (各有 " + mode[1] + " 個)<br />" ;
	
	DisplayArea.innerHTML += "<br />< 分散程度 ><br />" ;
	DisplayArea.innerHTML += "全距 ( Range )：" + range + "<br />" ;
	DisplayArea.innerHTML += "全距係數 ( Coefficient of Range )：" + range_c + "<br />" ;
	DisplayArea.innerHTML += "平均間距：" + range_b + "<br />" ;
	DisplayArea.innerHTML += "四分位數 ( Q1 , Q2 , Q3 )："+q1+" , "+median+" , "+q3+"<br />" ;
	DisplayArea.innerHTML += "平均差 ( MAD )：" + md + "<br />" ;
	if(dataSet_sample.checked && size==1)
	{
		DisplayArea.innerHTML += "標準差 ( σ / s / SD )：" + "無法估計" + "<br />" ;
		DisplayArea.innerHTML += "變異數 ( σ<sup>2</sup> / s<sup>2</sup> / Var )：" + "無法估計" + "<br />" ;
		DisplayArea.innerHTML += "變異係數 ( CV )：" + "無法估計" + "<br />" ;
		DisplayArea.innerHTML += "標準誤 ( SE )：" + "無法估計" + "<br />" ;
	}
	else
	{
		DisplayArea.innerHTML += "標準差 ( σ / s / SD )：" + sd + "<br />" ;
		DisplayArea.innerHTML += "變異數 ( σ<sup>2</sup> / s<sup>2</sup> / Var )：" + vari + "<br />" ;
		DisplayArea.innerHTML += "變異係數 ( CV )：" + cv + "<br />" ;
		DisplayArea.innerHTML += "標準誤 ( SE )：" + se + "<br />" ;
	}
	window.scrollTo(0,document.body.scrollHeight) ; // 滾到最底
}

function inputRandom(input,numSet)
{
	var array = input.split(","); // [最少,最大,個數]
	if(array[0]*1>array[1]*1) // 修正範圍
	{
		var buf = array[0] ;
		array[0] = array[1] ;
		array[1] = buf ;
	}
	
	var RandomNumber ; // 準備產生的隨機數 (未轉換)
	var change = x => eval(inputChange.value + "") ; // 使用者自定的轉換函數 f(x)
	for(var n = 0 ; n < array[2]*1 ; n++)
	{
		// 判斷 整數or實數，產生相應的隨機數
		if(numSet=="int") RandomNumber = Math.floor(Math.random()*(array[1]-array[0]+1)+array[0]*1);
		else RandomNumber = Math.random()*(array[1]-array[0])+array[0]*1;
		
		var output = change(RandomNumber) ; // 經使用者自定函數轉換
		
		pop.push(output); // 輸出
	}
	inputSub();
}

function randomDelete(max)
{
	var pos ;
	if(max >= pop.length) pop = [] ; // 全部清空
	else
	{
		for(var n = 0 ; n < max ; n ++)
		{
			pos = Math.floor(Math.random()*pop.length) ; // 隨機決定位置
			pop.splice(pos,1); // 移除
		}
	}
	inputSub(); // 更新統計資料
}

function inputKey()
{
	if(event.keyCode==13)
	{
		popAdd();
		inputSub();
	}
}

function linearCut(n) // 平均分段
{
	var min = pop[0] ;
	var max = pop[pop.length-1] ;
	var space = range/n ;
	pop = [min,max] ;
		
	for(var i = 1 ; i < n ; i ++ )
	{
		pop.push(min+space*i);
	}
	inputSub() ;
	
}

</script>

<center>
<div id="DisplayAreaPop" class="pop"></div><br />
<div id="DisplayArea" class="info"></div>
<br /><br />
<form>
	<span onClick="dataSet_population.checked='checked';inputSub();">
		<input type="radio" name="dataSet" id="dataSet_population" value="population">母體</input>
	</span>
	<span onClick="dataSet_sample.checked='checked';inputSub();">
		<input type="radio" name="dataSet" id="dataSet_sample" value="sample" checked >樣本</input>
	</span>
</form>
<input type="button" value="清空輸入框" onClick="inputValue.value='';" />
<input type="button" value="e" onClick="inputValue.value+=',2.718281828459045';" />
<input type="button" value="pi" onClick="inputValue.value+=',3.141592653589793';" />
<input id="inputValue" type="text" value="" size="60" onKeyPress="inputKey();" />
<input type="button" value="加入" onClick="popAdd();inputSub();" />
<input type="button" value="平均分段" onClick="linearCut(prompt('分多少段？'));" />
<br /><br />
加入隨機數(最少,最大,個數)：
<input id="inputRange" type="text" value="0,1,1000" size="30" />
<input type="button" value="加入整數" onClick="inputRandom(inputRange.value,'int');" />
<input type="button" value="加入實數" onClick="inputRandom(inputRange.value,'real');" />
<br />
<input type="button" value="二項試驗" onClick="inputRange.value='0,1,1000';" />
<input type="button" value="考試" onClick="inputRange.value='0,100,40';" />
<input type="button" value="擲骰子" onClick="inputRange.value='1,6,5';" />
<input type="button" value="撲克牌" onClick="inputRange.value='1,13,13';" />
<br />
轉換函數：f(x) = 
<input id="inputChange" type="text" value="x" size="30" />
<br />
<input type="button" value="緩衝" onClick="inputChange.value='x';" />
<input type="button" value="雙倍" onClick="inputChange.value='x*2';" />
<input type="button" value="平方" onClick="inputChange.value='x**2';" />
<input type="button" value="立方" onClick="inputChange.value='x**3';" />
<br /><br />
隨機移除多少個變數：
<input id="inputDel" type="text" value="10" size="15" />
<input type="button" value="隨機移除" onClick="randomDelete(inputDel.value);" />
<br />
<input type="button" value="移除首尾項" onClick="popMinus();" />
<input type="button" value="全部清空" onClick="inputClear();" />
<br /><br /><br />


</center>
</body>
</html>



