<html lang="zh-Hant-HK">
<head>
<title>計分器 v1</title>
<style type="text/css">
body
{
	background-color: #FFFFFF ;
	color: #000000 ;
}
table
{
	text-align: center ;
	margin-top: -12px ;
	background-color: #FFFFFF ;
	color: #000000 ;
}
thead tr th
{
	position: sticky ;
	top: 0 ;
}
th
{
	background-color: white ;
}
</style>
</head>
<body>
<center>
<br /><br />
<div id="show_table"></div>
<br /><br />
<input id="input_players" type="text" />
<input type="button" value="增加參賽者" onClick="addPlayer();" />
<br /><br />
< 分數設定 ><br />
底分：<input id="set_score_base" type="number" step="1" value="0" /><br />
加分：<input id="set_score_add" type="number" min="0" max="128" step="1" value="1" /><br />
扣分：<input id="set_score_minus" type="number" min="0" max="128" step="1" value="1" /><br />
<br />
<input type="button" value="移除全部參賽者" onClick="delPlayer(-1);" /><br />
<br />
<hr />
coded by ~tyovery~<br/>
2021-02
</center>
<script>
var tableHead = ["操作","編號","參賽者","名次","分數","標準分","勝","敗"] ; // 表頭

// 註解：控制
tableHead[0] += ' <input type="button" value="?" onClick="alert(help_CTRL);" />' ;
var help_CTRL = "+ : 得分\n" ;
help_CTRL += "- : 扣分\n" ;
help_CTRL += "分 : 指定分數\n" ;
help_CTRL += "^ : 上移該行\n" ;
help_CTRL += "v : 下移該行\n" ;
help_CTRL += "X : 移除該參賽者(須要確認)\n" ;

// 註解：分數
tableHead[4] += ' <input type="button" value="?" onClick="alert(help_SCORE);" />' ;
var help_SCORE = "雖然可以使用小數，但建議只用整數。" ;

var players = [] ; // 參賽者 的 名稱
var playerID = [] ; // 參賽者 的 ID
var playerID_used = 0 ; // ID 使用到
var score = [] ; // 參賽者 的 分數
var rank = [] ; // 參賽者 的 名次
var get = {win:[],lose:[]} ; // 勝,敗 次數

// 統計量
var sum ; // 加總
var mean ; // 算術平均值
var sd ; // 標準差(母體)
var zScore = [] ; // 標準分
var fixLen = 6 ; // 準確至幾位小數

function addPlayer()
{
	var list = input_players.value.split(",") ;
	list.forEach( i => i && players.push(i) ) ;
	renew_table() ; // 更新表格
}

function delPlayer(who) // 移除參賽者
{
	if(~who) // 移除1個參賽者
	{
		if( confirm( "是否要移除以下的參賽者？\n" + players[who] ) )
		{
			players.splice(who,1) ;
			playerID.splice(who,1) ;
			score.splice(who,1) ;
			get.win.splice(who,1) ;
			get.lose.splice(who,1) ;
		}
	}
	else // 移除全部參賽者
	{
		if( confirm("是否要移除全部參賽者？") )
		{
			players = [] ;
			playerID = [] ;
			playerID_used = 0 ;
			score = [] ;
			get.win = [] ;
			get.lose = [] ;
		}
	}

	renew_table() ; // 更新表格
}

function scoreChange(who,how)
{
	if(how**2==1)
	{
		score[who] += how * ( ~how ? set_score_add : set_score_minus ).value ;
	}
	else
	{
		var inputScore = prompt("請輸入指定分數：") ;
		if(inputScore!=null)
		{
			if(inputScore.length>0)
			{
				if( isNaN(inputScore) || inputScore**2==Infinity )
				{
					alert("輸入錯誤。") ;
				}
				else
				{
					score[who] = inputScore * 1 ;
				}
			}
			else
			{
				alert("甚麼都沒有輸入。") ;
			}
		}
	}
	renew_table() ;
}

function moveLine(who,how)
{
	// 記錄
	var index = who+how ; // 他行
	var name = players[index] ;
	if( name )
	{
		var id = playerID[index] ;
		var mark = score[index] ;
		var win = get.win[index] ;
		var lose = get.lose[index] ;

		// 移動本行
		players[index] = players[who] ;
		playerID[index] = playerID[who] ;
		score[index] = score[who] ;
		get.win[index] = get.win[who] ;
		get.lose[index] = get.lose[who] ;

		// 補空行
		players[who] = name ;
		playerID[who] = id ;
		score[who] = mark ;
		get.win[who] = win ;
		get.lose[who] = lose ;

		renew_table() ; // 更新表格
	}
	else alert("無法移動") ;
}

function clean_get(which)
{
	switch(which)
	{
		case "win" :
			var tag = "勝場次數" ;
		break ;
		
		case "lose" :
			var tag = "敗場次數" ;
		break ;
		
		default :
		return false ;
	}

	if( confirm("是否要把全部 "+tag+" 歸 0 ？") )
	{
		get[which].forEach((x,i,a)=>a[i]=0) ;
		/*
		for( var x of get[which] )
		{
			
			x = 0 ;
		}
		*/
		renew_table() ; // 更新表格
	}
}

function renew_table()
{
	// 新參賽者
	while(score.length < players.length)
	{
		playerID.push(++playerID_used) ; // 編號
		score.push(set_score_base.value*1||0) ; // 底分
		get.win.push(0) ; // 勝場次數
		get.lose.push(0) ; // 敗場次數
	}
	
	// 統計 //
		// 加總
		sum = 0 ;
		score.forEach(x=>sum+=x) ;
		
		// 平均
		mean = sum / score.length ;
		
		// 標準差
		sd = 0 ;
		score.forEach( x => sd += (x-mean)**2 ) ;
		sd /= score.length ;
		sd **= 0.5 ;
		
		// 標準分
		score.forEach( (x,i) => zScore[i] = (x-mean)/sd ) ;
		
		// 名次
		var check = [...score] ; // 複製分數
		var top ; // 目前最高分數
		var index ; // 指標
		var rank_order = 1 ; // 名次
		while( ( top = Math.max(...check) ) > -Infinity )
		{
			while( ~( index = check.indexOf(top) ) ) // 尋找同分
			{
				rank[index] = rank_order ; // 確定名次
				check[index] = -Infinity ; // 做死已確定名次的分數
			}
			rank_order ++ ;
		}

	var txt = '<table id="playerTable" border="1px" cellspacing="1px" cellpadding="5px">' ;
	txt += '<thead><tr>' ;
	tableHead.forEach( i => txt += '<th>' + i + '</th>' ) ;
	txt += '</tr></thead>' ;

	txt += '<tbody>' ;

	// 中部
	players.forEach(list);
	function list(name,id)
	{
		txt += '<tr>' ;

		// 控制
		txt += '<td>'
		txt += '<input type="button" value="+" onClick="get.win['+id+']++;scoreChange('+id+',1);" />' ;
		txt += ' <input type="button" value="-" onClick="get.lose['+id+']++;scoreChange('+id+',-1);" />' ;
		txt += ' <input type="button" value="分" onClick="scoreChange('+id+',0);" />' ;
		txt += ' <input type="button" value="^" onClick="moveLine('+id+',-1);" />' ;
		txt += ' <input type="button" value="v" onClick="moveLine('+id+',1);" />' ;
		txt += ' <input type="button" value="X" onClick="delPlayer('+id+');" />' ;
		txt += '</td>' ;
		
		txt += '<td>'+ playerID[id] +'</td>' ; // 編號
		txt += '<td>'+ name +'</td>' ; // 參賽者
		txt += '<td>'+ rank[id] +'</td>' ; // 名次
		txt += '<td>'+ score[id] +'</td>' ; // 分數
		txt += '<td>'+ zScore[id].toFixed(fixLen) +'</td>' ; // 標準分
		txt += '<td>'+ get.win[id] +'</td>' ; // 分數
		txt += '<td>'+ get.lose[id] +'</td>' ; // 分數
		txt += '</tr>' ;
	}

	// 底部
	txt += '<tr>' ;
	txt += '<td></td>' ;
	txt += '<td></td>' ;
	txt += '<td></td>' ;
	txt += '<td></td>' ;
	txt += '<td>&Sigma; = '+sum.toFixed(fixLen)+'</td>' ;
	txt += '<td>&mu; = '+mean.toFixed(fixLen) ;
	txt += '<br />&sigma; = '+sd.toFixed(fixLen)+'</td>' ;
	txt += '<td><input type="button" value="X" onClick="clean_get(\'win\');" /></td>' ;
	txt += '<td><input type="button" value="X" onClick="clean_get(\'lose\');" /></td>' ;
	txt += '</tr>' ;

	txt += '</tbody>' ;

	txt += '</table>' ;
	
	txt = txt.replace(/NaN/g,"無法計算");

	show_table.innerHTML = txt ;
}

</script>

</body>
</html>
