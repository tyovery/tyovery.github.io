<html lang="zh-Hant-HK">
<head>
<title>數字華容道</title>
<style>
td{text-align: center;} // 置中
</style>
</head>
<body bgcolor="#fff" >

<center>
<br /><h1>數字華容道</h1>

直：
<select id="setY">
	<script>
	for(var n = 2 ; n <= 10 ; n ++)
	{
		document.write('<option id="selectY'+n+'" value="'+n+'">'+n+'</option>');
	}
	</script>
</select>
　橫：
<select id="setX">
	<script>
	for(var n = 3 ; n <= 10 ; n ++)
	{
		document.write('<option id="selectX'+n+'" value="'+n+'">'+n+'</option>');
	}
	</script>
</select>
<br /><br />
洗亂度：
<select id="setUpset">
	<script>
	for(var n = 1 ; n <= 10 ; n ++)
	{
		document.write('<option id="selectUpset'+n+'" value="'+n+'">'+n+'</option>');
	}
	</script>
</select>
<input type="button" value="新的一局" onClick="gameBegin();" />

<br /><br />
<table><tr>
<td>已花步數：<div id="show_steps">-</div></td>
<td><div id="OutArea" ></div></td>
</tr></table>
<br />
<hr />
Coded by ~tyovery~<br />2018-02 ~ 2021-01
</center>

<script>

var MapSize = {} ; // 板圖大小
var card = [] ; // 數字牌(順序)
var card_upset = [] ; // 數字牌(亂序/當前)
var upsetTimes = (setY.value * setX.value * setUpset.value)**2 * 100 ; // 洗牌次數(最少1次)
var number ; // 顯示的[數字]或[空白]
var SpaceCard = {} ; // [空白卡]位置(x,y)
var SpaceCardInArray ; // [空白卡]位置(Array)
var game_steps = 0 ; // 已花步數
var game_card_left = [] ; // 最左的卡牌
var leftColor = "#AAA" ; // 最左的卡牌 的 着色
var rightColor = "#0A0" ; // 正確位置的卡牌 的 着色

function gameBegin()
{
	MapSize = {x: parseInt(setX.value) , y: parseInt(setY.value) } ; // x >= 3 , y >= 2

	function buildCard() // 建立數字牌
	{
		card = [] ; // 清空 數字牌
		game_card_left = [] ; // 清空 最左的卡牌

		for(var n=1 ; n < MapSize.x * MapSize.y ; n ++ )
		{
			card.push(n) ; // 加入 數字牌
			if(n%MapSize.x==1) game_card_left.push(n) ; // 記錄 最左的卡牌
		}
		card.push(""); // 插入空白牌
		// alert(card);
	}
	
	function buildCard_upset() // 洗牌 (現3x3得 雙數唔得?) (y,x): (3,6)唔得
	{
		card_upset = [] ; // 清空
		while(card.length > 0 )
		{
			card_upset.push( card.shift() ); // 按順序轉移數列
			// card_upset.push( card.splice( Math.random() * card.length , 1) ); // 隨機
		}
		buildCard(); // 重新建立數字牌, 待以後判斷是否完GAME(正確順序)
		
		// card_upset.splice( MapSize.x * MapSize.y * Math.random() ,0,""); // 隨機插入空白牌
		SpaceCardInArray = card_upset.length-1 ; // 記錄空白牌位置
		
		// alert(card_upset);
		
		for(var n = 0 ; n < upsetTimes ; n ++) // 隨機移動
		{
			var way = Math.random() * 4 ; // 決定動作(上,下,左,右)
			// alert("空白卡: " + SpaceCardInArray + "\n 動作: " + way)
			
			if(way < 1) // 右
			{
				if(SpaceCardInArray < 1) // 若沒有此動作,則重選動作
				{
					// alert("N右");
					n--;
					continue ;
				}
				else
				{
					// alert("右");
					card_upset.splice(SpaceCardInArray-1,2,"",card_upset[SpaceCardInArray-1]);
					SpaceCardInArray -- ;
				}
			}
			else if(way < 2) // 左
			{
				if(SpaceCardInArray > card_upset.length - 2) // 若沒有此動作,則重選動作
				{
					// alert("N左");
					n--;
					continue ;
				}
				else
				{
					// alert("左");
					card_upset.splice(SpaceCardInArray,2,card_upset[SpaceCardInArray+1],"");
					SpaceCardInArray ++ ;
				}
			}
			else if(way < 3) // 下
			{
				if(SpaceCardInArray < MapSize.x ) // 若沒有此動作,則重選動作
				{
					// alert("N下");
					n--;
					continue ;
				}
				else
				{
					// alert("下");
					card_upset.splice(SpaceCardInArray,1,card_upset[ SpaceCardInArray - MapSize.x ] );
					card_upset.splice(SpaceCardInArray - MapSize.x ,1, "" );
					SpaceCardInArray -= MapSize.x ;
				}
			}
			else // 上
			{
				if(SpaceCardInArray > card_upset.length - 1 - MapSize.x ) // 若沒有此動作,則重選動作
				{
					// alert("N上");
					n--;
					continue ;
				}
				else
				{
					// alert("上");
					card_upset.splice(SpaceCardInArray,1,card_upset[ SpaceCardInArray + MapSize.x ] );
					card_upset.splice(SpaceCardInArray + MapSize.x ,1, "" );
					SpaceCardInArray += MapSize.x ;
				}
			}
		}

		// alert(card_upset);
	}

	buildCard(); // 建立數字牌

	do
	{
		buildCard_upset(); // 洗牌
	}
	while( card_upset.join(",") == card.join(",") ); // 避免一開始就立即勝利

	var text2htm = "" ; // 準備輸出的table
	text2htm += "<table border='1' cellpadding='10' align='center'>" ;

	for(var y = 0 ; y < MapSize.y ; y ++) // y座標
	{
		text2htm += "<tr>" ;
		for(var x = 0 ; x < MapSize.x ; x ++ ) // x座標
		{
			number = card_upset[y * MapSize.x + x] ; // 格中數字 函式
			if(number == "") SpaceCard = {x:x , y:y} ; // 記錄[空白卡]位置
			
			// 放入板圖
			text2htm += "<td id='pos_"+y+"_"+x+"' " ;
			
			text2htm += "onClick='move("+y+","+x+");'>"+number+"</td>" ; 
		}
		text2htm += "</tr>" ;
	}

	text2htm += "</table>" ;

	OutArea.innerHTML = text2htm ; // 輸出
	
	renew_color() ; // 顏色處理
	
	game_steps = 0 ; // reset 已花步數
	
	renew_info() ; // 更新 game info
	
}

function renew_color() // 顏色處理
{
	for(var y = 0 ; y < MapSize.y ; y ++) // y座標
	{
		for(var x = 0 ; x < MapSize.x ; x ++ ) // x座標
		{
			if( eval("pos_"+y+"_"+x).innerHTML == MapSize.x * y + x + 1 ) // 正確位置 着色
			{
				eval("pos_"+y+"_"+x).setAttribute("style" , "background-color:"+rightColor+";" ) ;
			}
			else if ( eval("pos_"+y+"_"+x).innerHTML == "" ) // 空白格 着色
			{
				eval("pos_"+y+"_"+x).setAttribute("style" , "background-color:#fff;" ) ;
			}
			else // 最左板塊 着色
			{
				game_card_left.forEach(f) ;
				function f(check)
				{	
					if( eval("pos_"+y+"_"+x).innerHTML == check)
					{
						eval("pos_"+y+"_"+x).setAttribute("style" , "background-color:"+leftColor+";" ) ;
					}
				}
			}
		}
	}
}

function renew_info()
{
	show_steps.innerHTML = game_steps ; // 已花步數
}

function move(y,x) // 移動數字牌
{
	if( Math.abs(y-SpaceCard.y) + Math.abs(x-SpaceCard.x) == 1 ) // 可移動( y差 + x差 = 1 )
	{
		eval("pos_"+SpaceCard.y+"_"+SpaceCard.x+".innerHTML = pos_"+y+"_"+x+".innerHTML"); // [空白格]變為按下的數字(table)
		eval("pos_"+y+"_"+x+".innerHTML = '' "); // 被按的格變為[空白](table)
		
		renew_color() // 顏色處理
		/*// 顏色處理
		game_card_left.forEach(colorChange) ;
		function colorChange(leftNumber)
		{
			if ( eval("pos_"+SpaceCard.y+"_"+SpaceCard.x+".innerHTML") == leftNumber ) // 最左格
			{
				eval("pos_"+SpaceCard.y+"_"+SpaceCard.x).setAttribute("style" , "background-color:"+leftColor+";") ;
				eval("pos_"+y+"_"+x).setAttribute("style" , "background-color:#fff;") ;
			}
		}*/
		
		card_upset.splice( SpaceCard.y * MapSize.x + SpaceCard.x , 1 , card_upset[y * MapSize.x + x] ); // [空白格]變為按下的數字(array)
		card_upset.splice( y * MapSize.x + x , 1 , "" ); // 被按的格變為[空白](array)
		
		SpaceCard.y=y ; SpaceCard.x=x ; // 標記新的[空白]座標
		
		game_steps ++ ; // 更新 已花步數
		renew_info() ; // 更新 game info
	}
	
	// 檢查是否勝利(所有數字都已歸位)
	if( card_upset.join(",") == card.join(",") ) alert("你贏了！\n花費步數：" + game_steps + " 步");
}

// 預設板面 3×3
selectY3.selected=true;
selectX3.selected=true;
selectUpset10.selected=true; // 洗亂度 10
gameBegin(); // 新的一場

// alert(SpaceCard.y +"," +SpaceCard.x);

</script>

</body>
</html>
